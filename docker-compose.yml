version: '3.8'

services:
  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: sms-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - sms-network
    depends_on:
      - app

  # Laravel Application
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        user: ${USER:-user}
        uid: ${UID:-1000}
    image: school-management-system/app
    container_name: sms-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=school_db
      - DB_USERNAME=school_user
      - DB_PASSWORD=school_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - sms-network

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: sms-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: school_db
      MYSQL_USER: school_user
      MYSQL_PASSWORD: school_password
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - sms-db-data:/var/lib/mysql
    ports:
      - "33061:3306"
    networks:
      - sms-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:alpine
    container_name: sms-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - sms-network

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: school-management-system/frontend
    container_name: sms-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - sms-network

networks:
  sms-network:
    driver: bridge

volumes:
  sms-db-data:
